#pragma once

#include <string>

namespace san::cmake {

[[maybe_unused]] static std::string compile_opts()	{ return "${COMPILE_OPTS_STR}"; }
[[maybe_unused]] static std::string build_type()	{ return "${CMAKE_BUILD_TYPE}"; }

// Not generated by cmake, but let it be here.
[[maybe_unused]] static std::string compiler_id() {
#if defined( __clang__ ) // Clang also defines __GNUG__ (why?). So i'll check for '__clang__' first.
	return __VERSION__;
#elif defined( __GNUG__ )
	return "GNU C++ " + std::to_string( __GNUC__ ) + '.' + std::to_string( __GNUC_MINOR__ ) + '.' + std::to_string( __GNUC_PATCHLEVEL__ );
#else // other trash...
	return "${CMAKE_CXX_COMPILER_ID}";
#endif
}

} // namespace san::cmake
